basePath: /api/v1
definitions:
  dto.LoginRequest:
    description: User login request
    properties:
      password:
        description: |-
          Password must be at least 8 characters long and include uppercase, lowercase, and numbers
          @Example Password123
          @x-order 1
        example: Password123
        minLength: 8
        type: string
      phone_number:
        description: |-
          Iranian phone number in format 09XXXXXXXXX
          @Example 09123456789
          @x-order 0
        example: "09123456789"
        type: string
    required:
    - password
    - phone_number
    type: object
  dto.LoginResponse:
    description: User login response containing access and refresh tokens
    properties:
      access_token:
        description: |-
          JWT access token
          @Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          @x-order 0
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh_token:
        description: |-
          JWT refresh token
          @Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          @x-order 1
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  dto.LogoutRequest:
    description: User logout request
    properties:
      refresh_token:
        description: |-
          JWT refresh token
          @Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - refresh_token
    type: object
  dto.RefreshTokenRequest:
    description: Token refresh request
    properties:
      refresh_token:
        description: |-
          JWT refresh token
          @Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    required:
    - refresh_token
    type: object
  dto.RefreshTokenResponse:
    description: Token refresh response containing new access and refresh tokens
    properties:
      access_token:
        description: |-
          JWT access token
          @Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          @x-order 0
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      refresh_token:
        description: |-
          JWT refresh token
          @Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          @x-order 1
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  dto.RegisterRequest:
    description: User registration request
    properties:
      password:
        description: |-
          Password must be at least 8 characters long and include uppercase, lowercase, and numbers
          @Example Password123
          @x-order 1
        example: Password123
        minLength: 8
        type: string
      phone_number:
        description: |-
          Iranian phone number in format 09XXXXXXXXX
          @Example 09123456789
          @x-order 0
        example: "09123456789"
        type: string
    required:
    - password
    - phone_number
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server for AutoBan.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: AutoBan API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with phone number and password
      parameters:
      - description: User login details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: User login
      tags:
      - auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout a user using refresh token
      parameters:
      - description: User logout details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LogoutRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: User logout
      tags:
      - auth
  /api/v1/auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Get new access token using refresh token
      parameters:
      - description: Refresh token details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Refresh access token
      tags:
      - auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with phone number and password
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: {}
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: {}
            type: object
      summary: Register a new user
      tags:
      - auth
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Authentication operations
  externalDocs:
    description: Authentication operations documentation
    url: https://example.com/auth
  name: auth
