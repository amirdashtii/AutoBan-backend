{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for AutoBan.",
        "title": "AutoBan API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/auth/login": {
            "post": {
                "description": "Login a user with phone number and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "description": "Logout a user using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "parameters": [
                    {
                        "description": "User logout details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LogoutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh-token": {
            "post": {
                "description": "Get new access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh access token",
                "parameters": [
                    {
                        "description": "Refresh token details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RefreshTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Register a new user with phone number and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {}
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.LoginRequest": {
            "description": "User login request",
            "type": "object",
            "required": [
                "password",
                "phone_number"
            ],
            "properties": {
                "password": {
                    "description": "Password must be at least 8 characters long and include uppercase, lowercase, and numbers\n@Example Password123\n@x-order 1",
                    "type": "string",
                    "minLength": 8,
                    "example": "Password123"
                },
                "phone_number": {
                    "description": "Iranian phone number in format 09XXXXXXXXX\n@Example 09123456789\n@x-order 0",
                    "type": "string",
                    "example": "09123456789"
                }
            }
        },
        "dto.LoginResponse": {
            "description": "User login response containing access and refresh tokens",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "JWT access token\n@Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n@x-order 0",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refresh_token": {
                    "description": "JWT refresh token\n@Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n@x-order 1",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.LogoutRequest": {
            "description": "User logout request",
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "description": "JWT refresh token\n@Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.RefreshTokenRequest": {
            "description": "Token refresh request",
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "description": "JWT refresh token\n@Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.RefreshTokenResponse": {
            "description": "Token refresh response containing new access and refresh tokens",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "JWT access token\n@Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n@x-order 0",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "refresh_token": {
                    "description": "JWT refresh token\n@Example eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\n@x-order 1",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                }
            }
        },
        "dto.RegisterRequest": {
            "description": "User registration request",
            "type": "object",
            "required": [
                "password",
                "phone_number"
            ],
            "properties": {
                "password": {
                    "description": "Password must be at least 8 characters long and include uppercase, lowercase, and numbers\n@Example Password123\n@x-order 1",
                    "type": "string",
                    "minLength": 8,
                    "example": "Password123"
                },
                "phone_number": {
                    "description": "Iranian phone number in format 09XXXXXXXXX\n@Example 09123456789\n@x-order 0",
                    "type": "string",
                    "example": "09123456789"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Authentication operations",
            "name": "auth",
            "externalDocs": {
                "description": "Authentication operations documentation",
                "url": "https://example.com/auth"
            }
        }
    ]
}